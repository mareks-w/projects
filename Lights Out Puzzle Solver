Overview

A complete solver for the Lights Out puzzle, implemented in C, focused on performance, memory safety, and compact board representation. The goal was to find the minimum number of moves to reach the “all lights off” state using a breadth-first search (BFS) approach optimized with hash tables and bitvectors.

Technical Architecture

Language: C

Core Structures:

bitvector representation for each board (64-bit per state for fast hashing and comparison).

Custom board_data struct holding the bitvector and move history.

Algorithm: Breadth-first search over board states with deduplication via a custom hash table.

Memory Safety: All memory allocations tracked and validated using Valgrind, ensuring zero leaks or invalid accesses.

Key Optimizations

Reduced the search space by 99% through bit-level deduplication of previously seen states.

Custom hash function based on XOR and modular arithmetic for uniform key distribution.

Eliminated recursion entirely — iterative BFS structure prevents stack overflow and maximizes CPU cache efficiency.

Results

Solved all 5×5 and 7×7 variants efficiently.

Demonstrated how algorithmic design and low-level memory control can outperform naive solvers by orders of magnitude.
